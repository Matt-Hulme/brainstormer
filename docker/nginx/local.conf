server {
    listen 80;
    server_name localhost;

    # Basic auth for the entire site
    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Proxy requests to the frontend service
    location / {
        proxy_pass http://frontend:80; # Forward to the frontend container's Nginx
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # Backend API proxy
    location /api {
        proxy_pass http://backend:8000; # Forward to the backend container
        rewrite ^/api(/.*)$ $1 break; # Remove /api prefix before forwarding
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }

    # JWT token endpoint (Assuming this is handled by the backend)
    location /token {
        proxy_pass http://backend:8000/token;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint (Assuming this is handled by the backend)
    location /health {
        proxy_pass http://backend:8000/health;
        proxy_set_header Host $host;
    }
} 